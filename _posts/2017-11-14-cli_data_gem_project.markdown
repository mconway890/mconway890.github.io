---
layout: post
title:      "CLI Data Gem Project"
date:       2017-11-14 15:31:27 +0000
permalink:  cli_data_gem_project
---

   For my CLI Data Gem I decided to make a gem that I know myself and others would find both fun and useful. After exploring the [Ruby Gems](https://rubygems.org/) host service site I decided to make a gem called "wine list". Finally deciding on a subject felt like an accomplishment in itself. It's a daunting feeling to be given a blank screen and task. It's also a great challenge deciding on a topic that will hold your own interest during the coding process as well as entice others to be interested too. The next step I took for the project was done side by side with the the [CLI Data Gem Walkthrough video](https://www.youtube.com/watch?v=_lDExWIhYKI). One of the most helpful things i've found while taking this course is the video walkthroughs and codealongs. I think a blank page is overwhelming to anyone whether it be a developer or a student writing an essay, so having someone walk you through the basic steps to attain the backbones of your project was very encouraging. This step showed me the power of Bundler and the simple step, "bundle install". If you've ever done a lab and wondered, "Will I someday have to create these countless files from scratch??" (spec.md, .gitignore, gemfile, rakefile, etc.) This is where "bundle install" can play a very helpful role. 
	 
After completing the basic tasks needed I began the more intricate coding steps. I decided to have a gem that offered several options. I wanted to scrape from multiple pages to show users several different wines. I first made a method that would show the top three wines of the day, ranging from three different price ranges: under $15, $15-$30, and over $30. This step wasn't too challenging because each category had a different url making the iteration quite simple when listing the items. After displaying the top three, the user can then choose one and this would display the wines description. The next part of the gem was similar but to show the user the wines of the current year. I've always been fascinated by Ruby's built in methods, so being able to use the following code was exciting : `current_year = Date.today.year`. This "year" method would display the top twenty wines of the current year. This task ended up being rather challenging. For me, iteration has never been my strong suit and figuring out what method would work best in my scraping was incredibly frustrating. After deciding on a method it seemed that more of my code would break. Realizing that developers jobs is **a lot** of breaking and fixing was a helpful idea to come to terms with. When it was finally working, the list of wines from one through twenty were displayed, and the user had the option of seeing the description for each one, choosing to go back to the list for today, or exit the gem. 

With my gem functioning properly I began tweaking certain parts of it so it was more aesthetically pleasing to the users installing it. After that was complete I recorded the video demo to describe how users would interact with it and finally submitted my finished product. The entire process of this project was both intimidating and extremely rewarding. Working on more "real world" type subjects started to show me more of what I'll be able to do with all the knowledge I've learned as well as push me to start creating more outside of the course for even more practice.  


